<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="FontCaption" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="12" />
    </Style>
    <Style x:Key="FontText" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style x:Key="FontStrongText" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style x:Key="FontBigText" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="18" />
    </Style>
    <Style x:Key="FontSubtitle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="20" />
    </Style>
    <Style x:Key="FontTitle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="28" />
    </Style>
    <Style x:Key="FontBigTitle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="40" />
    </Style>
    <Style x:Key="FontView" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="68" />
    </Style>


    <Style x:Key="DefaultTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ThemeControlFill}" />
        <Setter Property="Foreground" Value="{DynamicResource TextPrimary}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStrongStroke}" />
        <Setter Property="CaretBrush" Value="{DynamicResource Primary700S}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border
                            x:Name="BackgroundBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Opacity="0.1" />
                        <Border
                            x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Opacity="0.77" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThemeControlFillPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Primary700S}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThemeControlFillPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Primary500S}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThemeControlFillPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Primary500S}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ThemeControlFill}" />
        <Setter Property="Foreground" Value="{DynamicResource TextPrimary}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStrongStroke}" />
        <Setter Property="CaretBrush" Value="{DynamicResource Primary700S}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border
                            x:Name="BackgroundBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Opacity="0.1" />
                        <Border
                            x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Opacity="0.77" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThemeControlFillPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Primary700S}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThemeControlFillPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Primary500S}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThemeControlFillPressed}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Primary500S}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSwitch" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource ThemeControlFill}" />
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStrongStroke}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource TextSecondary}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MaxHeight" Value="21" />
        <Setter Property="MaxWidth" Value="40" />
        <Setter Property="MinHeight" Value="21" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border
                            x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="9"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid>
                            <Rectangle
                                x:Name="Circle"
                                Width="10"
                                Height="10"
                                Margin="0,0,20,0"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Foreground}"
                                RadiusX="10"
                                RadiusY="10"
                                UseLayoutRounding="False" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Width"
                                            From="{x:Null}"
                                            To="13.5"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Height"
                                            From="{x:Null}"
                                            To="13.5"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <Setter Property="Background" Value="{DynamicResource ThemeControlFillFocused}" />
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Width"
                                            To="{x:Null}"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Height"
                                            To="{x:Null}"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Width"
                                            From="{x:Null}"
                                            To="13.5"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Height"
                                            From="{x:Null}"
                                            To="13.5"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <Setter Property="Background" Value="{DynamicResource Primary500S}" />
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Width"
                                            To="{x:Null}"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Height"
                                            To="{x:Null}"
                                            Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ThemeControlFillPressed}" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Primary700S}" />
                            <Setter Property="Foreground" Value="{DynamicResource ThemeDefault}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Margin"
                                            From="{x:Null}"
                                            To="0,0,-20,0"
                                            Duration="0:0:0.4">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Circle"
                                            Storyboard.TargetProperty="Margin"
                                            To="{x:Null}"
                                            Duration="0:0:0.4">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource Primary500S}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource Primary900S}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Primary700S}" />
        <Setter Property="Foreground" Value="{DynamicResource Primary700ForegroundS}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Content" Value="Button" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Primary900S}" />
                            <Setter Property="Foreground" Value="{DynamicResource Primary900ForegroundS}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Primary500S}" />
                            <Setter Property="Foreground" Value="{DynamicResource Primary500ForegroundS}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OutlinedButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextPrimary}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStrongStroke}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="15"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="{DynamicResource Primary700S}" />
                            <Setter Property="Foreground" Value="{DynamicResource Primary700ForegroundS}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="{DynamicResource Primary900S}" />
                            <Setter Property="Foreground" Value="{DynamicResource Primary900ForegroundS}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextPrimary}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Primary200S}" />
                            <Setter Property="Foreground" Value="{DynamicResource Primary200ForegroundS}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Primary400S}" />
                            <Setter Property="Foreground" Value="{DynamicResource Primary400ForegroundS}" />
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="50"
                                        Direction="-375"
                                        Opacity="0.4"
                                        ShadowDepth="0"
                                        Color="{DynamicResource Primary100}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Primary700S}" />
                            <Setter Property="Foreground" Value="{DynamicResource Primary700ForegroundS}" />
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="50"
                                        Direction="-375"
                                        Opacity="0.4"
                                        ShadowDepth="0"
                                        Color="{DynamicResource Primary400}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource TextTetriary}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Path
                            Width="14"
                            Height="14"
                            Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#D32F2F" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#B71C1C" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>